/**
 * TINY GENERATED CODE, DO NOT EDIT BY HAND
 * @project TinyTest
 */

entities.game.MainGroup.name = "MainGroup";
entities.game.MainGroup.load = function(world) {
    var arch0 = world.createArchetype(this.Component, ut.Core2D.Camera2D, ut.Core2D.TransformNode, ut.EditorExtensions.CameraCullingMask, ut.layers.Default)
    var e0 = world.createEntity(arch0);
    world.setEntityName(e0, "Camera");
    var arch1 = world.createArchetype(this.Component, ut.Core2D.LayerSorting, ut.Core2D.Sprite2DRenderer, ut.Core2D.Sprite2DRendererOptions, ut.Core2D.TransformLocalPosition, ut.Core2D.TransformLocalRotation, ut.Core2D.TransformLocalScale, ut.Core2D.TransformNode, ut.layers.Default)
    var e1 = world.createEntity(arch1);
    world.setEntityName(e1, "Sprite");
    var e2 = world.createEntity(arch1);
    world.setEntityName(e2, "BackGround");
    var c0 = new ut.Core2D.TransformNode();
    world.setComponentData(e0, c0);
    var c1 = new ut.Core2D.Camera2D();
    c1.halfVerticalSize = 5;
    var s0 = new ut.Math.Rect();
    s0.x = 0;
    s0.y = 0;
    s0.width = 1;
    s0.height = 1;
    c1.rect = s0;
    var s1 = new ut.Core2D.Color();
    s1.r = 0;
    s1.g = 0;
    s1.b = 0;
    s1.a = 1;
    c1.backgroundColor = s1;
    c1.clearFlags = 1;
    c1.depth = -1;
    c1.cullingMask = [ut.layers.Default.cid, ut.layers.TransparentFX.cid, ut.layers.IgnoreRaycast.cid, ut.layers.Water.cid, ut.layers.UI.cid, ut.layers.PostProcessing.cid, ut.layers.Cutscene.cid];
    c1.cullingMode = 2;
    world.setComponentData(e0, c1);
    var c2 = new ut.EditorExtensions.CameraCullingMask();
    c2.mask = -1;
    world.setComponentData(e0, c2);
    var c3 = new ut.Core2D.TransformNode();
    world.setComponentData(e1, c3);
    var c4 = new ut.Core2D.TransformLocalPosition();
    var s2 = new ut.Math.Vector3();
    s2.x = 0;
    s2.y = 0;
    s2.z = 0;
    c4.position = s2;
    world.setComponentData(e1, c4);
    var c5 = new ut.Core2D.TransformLocalRotation();
    var s3 = new ut.Math.Quaternion();
    s3.x = 0;
    s3.y = 0;
    s3.z = 0;
    s3.w = 1;
    c5.rotation = s3;
    world.setComponentData(e1, c5);
    var c6 = new ut.Core2D.TransformLocalScale();
    var s4 = new ut.Math.Vector3();
    s4.x = 1;
    s4.y = 1;
    s4.z = 1;
    c6.scale = s4;
    world.setComponentData(e1, c6);
    var c7 = new ut.Core2D.Sprite2DRenderer();
    c7.sprite = ut.EntityLookupCache.getByName(world, 'assets/sprites/animal_inoshishi');
    var s5 = new ut.Core2D.Color();
    s5.r = 1;
    s5.g = 1;
    s5.b = 1;
    s5.a = 1;
    c7.color = s5;
    c7.blending = 0;
    world.setComponentData(e1, c7);
    var c8 = new ut.Core2D.Sprite2DRendererOptions();
    var s6 = new ut.Math.Vector2();
    s6.x = 5;
    s6.y = 4.8;
    c8.size = s6;
    c8.drawMode = 2;
    world.setComponentData(e1, c8);
    var c9 = new ut.Core2D.LayerSorting();
    c9.order = 1;
    world.setComponentData(e1, c9);
    var c10 = new ut.Core2D.TransformNode();
    world.setComponentData(e2, c10);
    var c11 = new ut.Core2D.TransformLocalPosition();
    var s7 = new ut.Math.Vector3();
    s7.x = 0;
    s7.y = 0;
    s7.z = 0;
    c11.position = s7;
    world.setComponentData(e2, c11);
    var c12 = new ut.Core2D.TransformLocalRotation();
    var s8 = new ut.Math.Quaternion();
    s8.x = 0;
    s8.y = 0;
    s8.z = 0;
    s8.w = 1;
    c12.rotation = s8;
    world.setComponentData(e2, c12);
    var c13 = new ut.Core2D.TransformLocalScale();
    var s9 = new ut.Math.Vector3();
    s9.x = 1;
    s9.y = 1;
    s9.z = 1;
    c13.scale = s9;
    world.setComponentData(e2, c13);
    var c14 = new ut.Core2D.Sprite2DRenderer();
    var s10 = new ut.Core2D.Color();
    s10.r = 1;
    s10.g = 1;
    s10.b = 1;
    s10.a = 1;
    c14.color = s10;
    c14.blending = 0;
    world.setComponentData(e2, c14);
    var c15 = new ut.Core2D.LayerSorting();
    world.setComponentData(e2, c15);
    var c16 = new ut.Core2D.Sprite2DRendererOptions();
    var s11 = new ut.Math.Vector2();
    s11.x = 7;
    s11.y = 10;
    c16.size = s11;
    c16.drawMode = 2;
    world.setComponentData(e2, c16);
    return [e0, e1, e2];
}

